# -*- coding: UTF-8 -*-
import requests
import json
import re
import time
import csv
import datetime




# 1.爬取房价并且返回一个页面的字典
def get_housing_price(url):
    url = str(url)
    html = requests.get(url).text # 获取页面原代码
    # 正则表达式
    # 小区名
    name_rule = r'lianjia.com/xiaoqu/[0-9]*/" target="_blank">(.*?)</a>' #[0-9]* 表示任意多个数字     .*? 匹配一次
    name = re.findall(name_rule, html)
    # 房价
    price_rule = r'<div class="totalPrice"><span>(.*?)</span>'
    price = re.findall(price_rule, html)
    # 小区所在区域
    district_rule = r'class="district" title=".*?">(.*?)</a>'
    district = re.findall(district_rule, html)
    # 小区所在商圈
    bizcircle_rule = r'class="bizcircle" title=".*?">(.*?)</a>&nbsp'
    bizcircle = re.findall(bizcircle_rule, html)
    # 建立小区名和房价对应的字典
    housing_price_dict = {}
    if len(name) == len(price) == len(district) == len(bizcircle):
        for i in range(len(name)):
            infor = [] # 存放信息的列表
            if price[i] != '暂无': #因为存在暂无，把除了暂无房价数据以外的房价变成浮点型
                floated = float(price[i])
            else:
                floated = '暂无'
            infor.append(name[i])
            infor.append(district[i])
            infor.append(bizcircle[i])
            infor.append(floated)
            housing_price_dict[str(url)+'-'+str(i)+'-'+name[i]] = infor # 遍历生成键值
    else:
        print('参数匹配失败')
    return housing_price_dict



# 2.1.合并字典
def merge_dict(dict1, dict2):
    merged = {**dict1, **dict2} 
    return merged


# 2.2.整合房价字典
def merge_price_dict(url, PageStart, PageEnd):
    initial = {}
    for pg in range(PageStart, PageEnd+1): # 设置起始和中止界面
        url_new = str(url) + '/pg' + str(pg) + '/' # 翻页
        prices = get_housing_price(url_new)
        time.sleep(5)
        print(f'===================正在获取第 {pg} 页房价数据===================')
        initial = merge_dict(initial, prices)
    return initial



# 3.获取POI数据
def get_POI(Keyword, District):
    ak = 这里填入你获取的ak，并且用引号括起来
    url = f'http://api.map.baidu.com/place/v2/search?query={Keyword}&region={District}&page_size=20&page_num=0&output=json&ak={ak}'
    html = requests.get(url)    #获取网页信息
    data = html.json()          #获取网页信息的json格式数据
    item = data['results'][0]   # 读取reults里第一个元素，可能是最匹配的
    Name = item["name"]
    # Province = item['province']
    City = item['city']
    Area = item['area']
    # Address = item['address']
    Region = City + Area
    ######获取经纬度#####
    Longitude = item['location']['lng'] # 经度
    Latitude = item['location']['lat']  # 纬度
    return Name, Region, Longitude, Latitude



# 4.把房价数据和POI数据匹配，生成新字典
def match_price_POI(url, PageStart, PageEnd, City):
    count = 1
    hp_infor = merge_price_dict(url, PageStart, PageEnd) # 获取房价信息字典
    for key, value in hp_infor.items(): # 遍历获得房价信息字典的键和值
        if count % 50 == 0:
            print(f'===================正在获取第 {count} 条POI数据===================')
            time.sleep(1)
        count += 1
        try:
            name, region, lon, lat = get_POI(value[0], value[1]) # 以键（小区名）作为关键词获取POI数据
        except:
            try:
                name, region, lon, lat = get_POI(value[0], str(City)) # 搜索大城市区域
            except:
                try:
                    name, region, lon, lat = get_POI(value[1]+value[0], str(City)) # 以键（小区名）作为关键词获取POI数据
                except:
                    print(f'！！！！！！查询 {key} 的POI数据时遇到一个不可避免的错误！！！！！！')
                    name = ''
                    region = ''
                    lon = ''
                    lat = ''
        time.sleep(2)
        value.append(name)
        value.append(region)
        value.append(lon)
        value.append(lat)
        hp_infor[key] = value # 更新字典
    return hp_infor



# 5.把房价数据和POI数据写入CSV
def write_CSV(url, PageStart, PageEnd, City, FileName):                                    #urls是传入的url列表，FileName是存储的csv文件夹名
    startime = datetime.datetime.now()
    print(f'当前时间   {startime}')

    data = match_price_POI(url, PageStart, PageEnd, City)              #爬取整合房价和POI数据
    Mycsv = open(f'{FileName}.csv','a',newline='')        #打开csv
    csv_write = csv.writer(Mycsv,dialect='excel')
    tittle = ('小区', '地区', '商圈', '房价', 'POI小区', 'POI地区', '经度', '纬度')           #表头
    csv_write.writerow(tittle)                            #写入表头
    count = 1
    for key, value in data.items():
        content = (value[0], value[1], value[2], value[3], value[4], value[5], value[6], value[7])
        csv_write.writerow(content)
        if count % 10 == 0:
            print(f'===================正在写入第 {count} 条房价数据===================')
        count += 1
    print('数据写入完成')

    endtime = datetime.datetime.now()
    print(f'当前时间   {endtime}')
    print('')
    print(f'共花费时间   {endtime - startime}')
    print('')
    print('')
